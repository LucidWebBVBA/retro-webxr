{"version":3,"sources":["index.js"],"names":["useRetroWebXR","chromeSemverPattern","getChromeSemver","pattern","semver","navigator","userAgent","match","length","major","minor","build","patch","chromeVersion","map","ver","parseInt","isFlagActive","flags","flagPath","reduce","acc","k","_acc","flag","allFlag","all","changes","isBrowserFlagActive","browser","isAframeFlagActive","aframe","window","xr","requestDevice","requestSession","assetItems","document","querySelectorAll","forEach","assetItem","setAttribute","assetItemGLBAsArrayBuffer"],"mappings":";AAqFeA,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,QAAAA,QAAAA,mBAAAA,EArFf,IAAMC,EAAsB,yDAEtBC,EAAkB,SAACC,GACfC,IAAAA,EACFC,UACKC,UACAC,MAAMJ,GAAWF,GAGtBG,GAAU,MAAVA,GAAmC,GAAjBA,EAAOI,OAClB,MAAA,CACHC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,GAIVC,IAAAA,EAAgBT,EAAOU,IAAI,SAAAC,GAAOC,OAAAA,SAASD,EAAK,MAE/C,MAAA,CACHN,MAAOI,EAAc,GACrBH,MAAOG,EAAc,GACrBF,MAAOE,EAAc,GACrBD,MAAOC,EAAc,KAIvBI,EAAe,SAAAC,GAAS,OAAA,SAAAC,GAAYA,OAAAA,EAASC,OAAO,SAACC,EAAKC,GACtDC,IAAAA,EAAQF,GAAO,GACfG,EAAOD,EAAKD,GAGVG,OAFQF,EAAKG,KAEFF,IAAS,GAC7BN,KA2BUlB,EAAgB,WAACkB,IAAAA,EAAQ,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAC5BS,EAAU,GAEVC,EAAsBX,EAAaC,EAAMW,SACzCC,EAAqBb,EAAaC,EAAMa,QAU1CD,GAPAF,EAAoB,CAAC,mBAAqB1B,IAAkBO,OAAS,KACrEuB,OAAO3B,UAAU4B,GAAGC,cAAgBF,OAAO3B,UAAU4B,GAAGE,eAExDR,EAAQ,qCAAuC,sCAI/CG,EAAmB,CAAC,8BAA+B,CAC7CM,IAAAA,EAAaC,SAASC,iBAAiB,6BAC7CF,EAAWG,QAAQ,SAAAC,GAAaA,OAAAA,EAAUC,aAAa,gBAAiB,iBAExEd,EAAQe,0BAA4BN,EAGjCT,OAAAA,GAGI3B,QAAAA,cAAAA,EAAAA,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA","file":"index.js","sourceRoot":"..\\src","sourcesContent":["const chromeSemverPattern = /Chrom(?:e|ium)\\/([0-9]+)\\.([0-9]+)\\.([0-9]+)\\.([0-9]+)/;\r\n\r\nconst getChromeSemver = (pattern) => {\r\n    const semver = (\r\n        navigator\r\n            .userAgent\r\n            .match(pattern || chromeSemverPattern)\r\n    );\r\n\r\n    if (semver == null || semver.length != 5) {\r\n        return {\r\n            major: -1,\r\n            minor: -1,\r\n            build: -1,\r\n            patch: -1\r\n        };\r\n    }\r\n\r\n    const chromeVersion = semver.map(ver => parseInt(ver, 10));\r\n\r\n    return {\r\n        major: chromeVersion[1],\r\n        minor: chromeVersion[2],\r\n        build: chromeVersion[3],\r\n        patch: chromeVersion[4]\r\n    };\r\n}\r\n\r\nconst isFlagActive = flags => flagPath => flagPath.reduce((acc, k) => {\r\n    const _acc = (acc || {});\r\n    const flag = _acc[k];\r\n    const allFlag = _acc.all;\r\n\r\n    return (allFlag || flag) || false;\r\n}, flags);\r\n\r\n/**\r\n * @function\r\n * \r\n * @param {Object} flags \r\n * \r\n * @param {Object} flags.browser\r\n * @param {Boolean} flags.browser.requestDevice Alias navigator.xr.requestDevice to navigator.xr.requestSession. Only for Chrome 79+.\r\n * \r\n * @param {Boolean} flags.aframe\r\n * @param {Boolean} flags.aframe.assetItemGLBAsArrayBuffer Set `response-type=\"arraybuffer\"` on `a-asset-item` when their src ends with `.glb`\r\n * \r\n * @returns {Object} Applied changes\r\n * \r\n * @example\r\n * import { useRetroWebXR } from '@lucidweb/retro-webxr';\r\n * \r\n * useRetroWebXR({\r\n *  browser: {\r\n *    requestDevice: true\r\n *  },\r\n *  aframe: {\r\n *    assetItemGLBAsArrayBuffer: true\r\n *  }\r\n * });\r\n */\r\nexport const useRetroWebXR = (flags = {}) => {\r\n    const changes = {};\r\n\r\n    const isBrowserFlagActive = isFlagActive(flags.browser);\r\n    const isAframeFlagActive = isFlagActive(flags.aframe);\r\n\r\n    /* BROWSER FLAGS */\r\n    if (isBrowserFlagActive(['requestDevice']) && getChromeSemver().major >= 79) {\r\n        window.navigator.xr.requestDevice = window.navigator.xr.requestSession;\r\n\r\n        changes['window.navigator.xr.requestDevice'] = 'window.navigator.xr.requestSession';\r\n    }\r\n\r\n    /* AFRAME FLAGS */\r\n    if (isAframeFlagActive(['assetItemGLBAsArrayBuffer'])) {\r\n        const assetItems = document.querySelectorAll('a-asset-item[src$=\".glb\"]');\r\n        assetItems.forEach(assetItem => assetItem.setAttribute('response-type', 'arraybuffer'));\r\n\r\n        changes.assetItemGLBAsArrayBuffer = assetItems;\r\n    }\r\n\r\n    return changes;\r\n};\r\n\r\nexport default useRetroWebXR;\r\n\r\n"]}